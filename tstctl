#!/usr/bin/sh -eu

subcmd=${1:-help}
shift

tstctl_init() {
    if [ -e test-plan ]; then
	cp test-plan test-plan.old
    fi

    echo NPROC 1 > test-plan
    echo TEST_TIMEOUT 300 >> test-plan
    echo OP_TIMEOUT 5 >> test-plan
}

tstctl_add_tests() {
    local runtest=$1

    cp test-plan test-plan.old

    awk '! /(^#)|(^\s*$)/ { print "TODO", $0 }' $runtest >> test-plan
}

tstctl_add_test() {
    local tid=$1
    shift

    cp test-plan test-plan.old

    echo TODO $tid $@ >> test-plan
}

set_kv() {
    local key=$1
    local val=$2

    cp test-plan test-plan.old
    awk "/^$key/ {print \"$key\", \"$val\"} !/^$key/ {print}" \
	test-plan.old > test-plan
}

tstctl_set() {
    local key=$1
    local val=$2

    case $key in
	NPROC) set_kv $key $val;;
	TEST_TIMEOUT) set_kv $key $val;;
	OP_TIMEOUT) set_kv $key $val;;
	*) echo Unrecognised Property: $key! >&2
	   exit 123
    esac
}

tstctl_status() {
    awk 'BEGIN { ret = "DONE" } \
    	 /^TODO/ { ret = "TODO"; exit } \
    	 END { print ret }' \
	test-plan
}

tstctl_help() {
cat <<EOF
LTP Executor Test Control

	tstctl (init | status | set | get | help)

Inspect and manipulate test plans.


	tstctl init

Create an empty test plan in the current working directory.


	tstctl add-tests <runtest>

Import tests from <runtest> file into the current test plan

	tstctl add-test <tid> <command-line>

Add a single test or arbitrary command. Requires the Test ID (tid)
followed by a command line.

	tstctl status

Check whether all the tests have been executed by inspecting the test plan in
the present working directory. Prints DONE or TODO to stdout.


	tstctl set <key> <value>

Set an option in the test plan. You should atleast set NPROC to the
number of tests you would like to run concurrently e.g. tstctl set
NPROC 8.

EOF
}

case $subcmd in
    init) tstctl_init;;
    status) tstctl_status;;
    add-tests) tstctl_add_tests $@;;
    add-test) tstctl_add_test $@;;
    set) tstctl_set $@;;
    help) tstctl_help;;
    *) echo Unrecognised Sub-Command \"$subcmd\"! >&2
       tstctl_help
       exit 123
esac
